
// 以下为day18的第一个版本
注意事项：
1.SeataServer，即TC的文件 \seata\bin\sessionStore\root.data会持久化事务执行状态，经测试，如果提交阶段失败，
 即将storage/src/main/java/com/biao/mall/storage/impl/ProductServiceImpl.java中commit空提交改为返回false，
 重启TC或应用，会自动继续尝试commit提交，再重启应用，RM注册失败，重启SeataServer，也会自动继续commit，说明有进行文件形式的
 持久化机制！为什么会如此？因为，对于二阶段式提交，只要try成功，commit是必须要成功的，这个流程本来就是一个事务，故TC来保证此原则的执行。要恢复正常，删掉root.data即可！

TCC的本地模式代码，仅改造了storage模块，启动运行的模块只需要使用storage模块即可。
2. ProductService 上注解 @LocalTCC 即 TCC本地模式：即分支事务是本地调用，非RPC调用。



// 以下为day18的第二个版本，修改于2020年2月7日， 实现了TCC全局模式，
注意依赖升级 nacos 1.1.3 --> 1.1.4
           seata-all 0.8.1 --> 1.0.0
           seata-server 为 1.0.0

seata-server 在window JDk11下启动bat：

